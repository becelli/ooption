{
  "name": "ooptional",
  "description": "TypeScript optional types with seamless async support and magical type inference",
  "author": "becelli",
  "version": "2.0.0",
  "maintainers": [{ "name": "becelli" }],
  "main": "dist/index.js",
  "module": "dist/index.mjs",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "import": "./dist/index.mjs",
      "require": "./dist/index.js",
      "types": "./dist/index.d.ts"
    }
  },
  "files": ["dist"],
  "scripts": {
    "test": "bun test --watch --coverage --runInBand --detectOpenHandles --forceExit",
    "build:watch": "tsc --watch",
    "prebuild": "rimraf dist",
    "build": "tsup",
    "lint": "eslint ."
  },
  "license": "MIT",
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^7.1.1",
    "@typescript-eslint/parser": "^7.1.1",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "rimraf": "5.0.5",
    "tsup": "^8.0.2",
    "typescript": "^5.3.3"
  },
  "directories": {
    "test": "tests"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/becelli/ooptional.git"
  },
  "keywords": [
    "oop",
    "object",
    "optional",
    "functional",
    "typescript",
    "safe",
    "inference"
  ],
  "bugs": {
    "url": "https://github.com/becelli/ooptional/issues"
  },
  "homepage": "https://github.com/becelli/ooptional#readme"
}